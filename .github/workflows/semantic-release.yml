name: Semantic Release

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build plugin
        run: pnpm run build

      - name: Run tests (if any)
        run: pnpm run test || echo "No tests found"

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm run semantic-release

  release-github:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.new_release_published == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build plugin
        run: pnpm run build

      - name: Get latest tag
        id: get_version
        run: |
          git fetch --tags
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Create release package
        run: pnpm run release:package

      - name: Generate release notes
        id: release_notes
        run: |
          # 使用语义化发布生成的变更日志
          if [ -f "CHANGELOG.md" ]; then
            # 提取当前版本的变更日志
            awk '/^## \[${{ steps.get_version.outputs.version }}\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > current_release_notes.md
          else
            echo "# Release ${{ steps.get_version.outputs.tag }}" > current_release_notes.md
            echo "" >> current_release_notes.md
            echo "Automated release created by semantic-release" >> current_release_notes.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          name: SearchPlus ${{ steps.get_version.outputs.tag }}
          body_path: current_release_notes.md
          files: |
            release/SearchPlus-${{ steps.get_version.outputs.tag }}.zip
            release/INSTALL.md
            README.md
            README_CN.md
            LICENSE
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
